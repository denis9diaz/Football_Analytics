---
import Navbar from "../components/Navbar.astro";
const apiUrl = import.meta.env.PUBLIC_API_URL;
---

<!doctype html>
<html
  lang="es"
  class="bg-fixed bg-cover bg-center"
  style="background-image: url('/src/assets/background.webp');"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.webp" />
    <meta name="generator" content={Astro.generator} />
    <title>
      Football Analytics | Apuestas deportivas con valor y análisis profesional
    </title>
    <meta
      name="description"
      content="Descubre las apuestas más probables de cada mercado, analizadas con métodos estadísticos rentables y verificados por profesionales. Ligas seleccionadas, análisis de valor y los partidos más destacados del día."
    />
    <meta
      name="keywords"
      content="apuestas deportivas, análisis fútbol, valor estadístico, probabilidades, partidos destacados, métodos rentables, ligas fiables, predicciones fútbol"
    />
    <meta name="robots" content="index, follow" />
    <meta
      property="og:title"
      content="Football Analytics | Apuestas deportivas con valor y análisis profesional"
    />
    <meta
      property="og:description"
      content="Las apuestas más probables de cada mercado, analizadas por profesionales. Descubre los partidos más destacados y toma decisiones con criterio."
    />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="/favicon.svg" />
    <meta property="og:locale" content="es_ES" />
    <link rel="canonical" href="" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600;700&family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body data-api-url={apiUrl}>
    <Navbar />
    <slot />
  </body>
  <script>
    const ACCESS_LIFETIME_MINUTES = 10;
    const REFRESH_INTERVAL_MINUTES = 8;

    let lastActivity = Date.now();

    function updateActivity() {
      lastActivity = Date.now();
    }

    window.addEventListener("mousemove", updateActivity);
    window.addEventListener("keydown", updateActivity);
    window.addEventListener("mousedown", updateActivity);
    window.addEventListener("touchstart", updateActivity);

    function logout() {
      localStorage.removeItem("access");
      localStorage.removeItem("refresh");
      localStorage.removeItem("username");
      window.location.href = "/login";
    }

    async function silentTokenRefresh() {
      const refresh = localStorage.getItem("refresh");
      if (!refresh) {
        console.error("No refresh token found.");
        return;
      }

      const API_URL = document.body.getAttribute("data-api-url");
      if (!API_URL) {
        console.error("API URL not found.");
        return;
      }

      try {
        const response = await fetch(`${API_URL}/api/auth/refresh/`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ refresh }),
        });

        if (response.ok) {
          const data = await response.json();
          localStorage.setItem("access", data.access);
          console.log("Token refreshed successfully.");
        } else {
          console.error("Token refresh failed.");
          logout();
        }
      } catch (error) {
        console.error("Error during token refresh:", error);
        logout();
      }
    }

    setInterval(() => {
      const timeSinceLastActivity = Date.now() - lastActivity;
      console.log(`Time since last activity: ${timeSinceLastActivity} ms`);

      if (timeSinceLastActivity < ACCESS_LIFETIME_MINUTES * 60 * 1000) {
        console.log("Refreshing token...");
        silentTokenRefresh();
      } else {
        console.log("User inactive for too long. Logging out.");
        logout();
      }
    }, REFRESH_INTERVAL_MINUTES * 60 * 1000);
  </script>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  body {
    overflow-x: hidden;
  }

  .bg-fixed {
    background-attachment: fixed;
  }

  .bg-cover {
    background-size: cover;
  }

  .bg-center {
    background-position: center;
  }
</style>
